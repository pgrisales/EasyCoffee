/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontera;

import com.easycoffee.Lote;
import javax.swing.JOptionPane;

/**
 *
 * @author Nivektakedown
 */
public class AgregarArbolesMuertos extends javax.swing.JPanel {
    private Lote lote;
    private String[] variedad;
    private int[] arbolesVivos;
    public AgregarArbolesMuertos(Lote lote) {
        this.lote=lote;
        initComponents();
        this.variedad = new String[]{"Típica", "Borbón", "Maragogipe", "Tabi", "Caturra", "Variedad Colombia"};
        this.arbolesVivos = new int[]{0,0,0,0,0,0};
        variedadC.removeAllItems();
        for (int i = 0; i < this.variedad.length; i++) {
            variedadC.addItem(this.variedad[i]);
        }
        numeroArboles();
    }

    public Lote getLote() {
        return lote;
    }

    public void setLote(Lote lote) {
        this.lote = lote;
    }
    
    public void matarArboles(int numero){
       // this.variedad[this.variedadC.getSelectedIndex()]
       int muertos=0;
        for (int i = 0; i < this.lote.getArbolesVivos().size(); i++) {
            if(this.lote.getArbolesVivos().get(i).getVariedad().equals(this.variedad[this.variedadC.getSelectedIndex()])&&this.lote.getArbolesVivos().get(i).isEstadoArbolVivo()==true&&muertos<numero){
                this.lote.getArbolesVivos().get(i).setEstadoArbol(false);
                muertos++;
            }
        }
        numeroArboles();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        variedadC = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        numArboles = new javax.swing.JTextField();
        agregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setMaximumSize(null);
        setMinimumSize(null);

        variedadC.setBackground(new java.awt.Color(255, 255, 255));
        variedadC.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        variedadC.setForeground(new java.awt.Color(0, 0, 0));
        variedadC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setFont(new java.awt.Font("Sitka Banner", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Seleccione la variedad de los árboles");

        jLabel2.setBackground(new java.awt.Color(102, 102, 102));
        jLabel2.setFont(new java.awt.Font("Sitka Banner", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("¿Cuántos árboles desea agregar?");

        numArboles.setBackground(new java.awt.Color(255, 255, 255));
        numArboles.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        numArboles.setForeground(new java.awt.Color(0, 0, 0));

        agregar.setBackground(new java.awt.Color(102, 0, 0));
        agregar.setFont(new java.awt.Font("Sitka Banner", 0, 18)); // NOI18N
        agregar.setForeground(new java.awt.Color(255, 255, 255));
        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setFont(new java.awt.Font("Sitka Banner", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Típica", "0"},
                {"Borbón", "0"},
                {"Maragogipe", "0"},
                {"Tabi", "0"},
                {"Caturra", "0"},
                {"Variedad Colombia", "0"}
            },
            new String [] {
                "Variedad", "Cantidad de Arboles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setSelectionBackground(new java.awt.Color(0, 0, 0));
        jTable1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(variedadC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numArboles)
                    .addComponent(agregar, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addGap(35, 35, 35))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(31, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(32, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(166, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(variedadC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(numArboles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(17, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(151, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        if (numArboles.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese cuantos árboles desea agregar");

        } else {
            try{
                if(Integer.parseInt(this.numArboles.getText())>arbolesVivos[this.variedadC.getSelectedIndex()]){
                    JOptionPane.showMessageDialog(null, "La cantidad de árboles que desea ingresar es mayor a la existente para la variedad seleccionada.");
                }
                else{
                    matarArboles(Integer.parseInt(this.numArboles.getText()));
                }
                
            }
            catch(NumberFormatException nfe){
                JOptionPane.showMessageDialog(null, "Por favor ingrese datos numéricos");
            }
            
            
            
        }
    }//GEN-LAST:event_agregarActionPerformed
    public void numeroArboles() {
        int[] numero = new int[6];
        for (int i = 0; i < this.lote.getArbolesVivos().size(); i++) {
            if(lote.getArbolesVivos().get(i).isEstadoArbolVivo()==true)
            switch (this.lote.getArbolesVivos().get(i).getVariedad()) {
                case "Típica": {
                    numero[0]++;
                    break;
                }
                case "Borbón": {
                    numero[1]++;
                    break;
                }
                case "Maragogipe": {
                    numero[2]++;
                    break;
                }
                case "Tabi": {
                    numero[3]++;
                    break;
                }
                case "Caturra": {
                    numero[4]++;
                    break;
                }
                case "Variedad Colombia": {
                    numero[5]++;
                    break;
                }
            }
        }
        for (int i = 0; i < 6; i++) {
            this.jTable1.setValueAt(numero[i], i, 1);
        }
        this.arbolesVivos=numero;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField numArboles;
    private javax.swing.JComboBox<String> variedadC;
    // End of variables declaration//GEN-END:variables
}
